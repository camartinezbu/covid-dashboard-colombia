vcovHC(modelo_lineal, omega = function(resduals, diaghat, df) {residuals^2/(1-diaghat)^2}, type ="HC2")
omega <- function(resduals, diaghat, df) {residuals^2/(1-diaghat)^2}
vcovHC(modelo_lineal, omega =omega, type ="HC2")
omega <- function(residuals, diaghat, df) {residuals^2/(1-diaghat)^2}
vcovHC(modelo_lineal, omega =omega, type ="HC2")
H <- X%*%ginv(t(X)%*%X)%*%t(X)
H <- x%*%ginv(t(x)%*%x)%*%t(x)
View(H)
vcovHC(modelo_lineal, omega = NULL, type = "HC4")
modelo_lineal$coefficients
x <- rnorm(t, mu_x)
modelo_lineal <- lm(y ~x)
H <- x%*%ginv(t(x)%*%x)%*%t(x)
modelo_lineal$coefficients
t <- 100
beta <- c(-3.7, 1.3)
mu_x <- c(-0.5)
sigma_e <- 0.3
delta_0 <- 2.1
delta_1 <- -0.6
p <- 0.4
x <- rnorm(t, mu_x)
z <- runif(t, 0.01, 2)
ht <- function(x) sigma_e*(delta_0 + delta_1*x)
e <- arima.sim(list(order = c(1,0,0), ar=p), n = t, sd = ht(z))
y <- x%*%beta + e
x <- cbind(rep(1, t), rnorm(t, mu_x))
x <- cbind(rep(1, t), rnorm(t, mu_x))
z <- runif(t, 0.01, 2)
ht <- function(x) sigma_e*(delta_0 + delta_1*x)
e <- arima.sim(list(order = c(1,0,0), ar=p), n = t, sd = ht(z))
y <- x%*%beta + e
View(x)
modelo_lineal <- lm(y ~x[,2])
vcovHC(modelo_lineal, omega = NULL, type ="HC2")
modelo_lineal$coefficients
modelo_lineal$residuals
dim(modelo_lineal$residuals)
omega_hc2 <- (residuals^2)/(1-diag(H))^2
for(i in 1:100) {
omega_hc2[i] <- (residuals[i]^2)/(1-diag(H)[i])^2
}
View(H)
diag_H <- diag(H)
residuals <- modelo_lineal$residuals
omega_hc2 <- (residuals^2)/(1-diagH)^2
omega_hc2 <- (residuals^2)/(1-diag_H)^2
vcovHC(modelo_lineal, omega = (residuals^2)/(1-diag_H)^2)
vcovHC(modelo_lineal, omega = (residuals^3)/(1-diag_H)^2)
vcovHC(modelo_lineal, omega = (residuals^4)/(1-diag_H)^2)
vcovHC(modelo_lineal, omega = (residuals^2)/(1-diag_H)^2)
vcovHC(modelo_lineal, omega = NULL, type ="HC2")
vcovHC(modelo_lineal, omega = NULL, type = "HC4")
vcovHC(modelo_lineal, omega = (residuals^2)/(1-diag_H)^2)
vcovHC(modelo_lineal, omega = NULL, type ="HC2")
vcovHC(modelo_lineal, omega = NULL, type = "HC4")
vcovHC(modelo_lineal, omega = (residuals^2)/(1-diag_H)^min(4, diag_H/mean(diag_H)))
vcovHC(modelo_lineal,(residuals^2)/(1-diag_H)^2, prewhite = FALSE,
adjust = TRUE, sandwich = TRUE)
vcovHC(modelo_lineal, weights = (residuals^2)/(1-diag_H)^2, prewhite = FALSE,
adjust = TRUE, sandwich = TRUE)
vcovHC(modelo_lineal, omega = NULL, type ="HC2")
vcovHC(modelo_lineal, weights = (residuals^2)/(1-diag_H)^2, prewhite = FALSE,
adjust = TRUE, sandwich = TRUE)
coeftest(modelo_lineal, df = Inf, vcov = vcovHC(fm.ps, type = "HC0"))
coeftest(modelo_lineal, df = Inf, vcov = vcovHC(modelo_lineal, type = "HC0"))
coeftest(modelo_lineal, df = Inf, vcov = vcovHC(modelo_lineal, type = "HC4"))
coeftest(modelo_lineal, df = Inf, vcov = vcovHC(modelo_lineal, type = "HC0"))
coeftest(modelo_lineal, df = Inf, vcov = NeweyWest(modelo_lineal, lag = 4, prewhite = FALSE))
coeftest(modelo_lineal, df = Inf, vcov = NeweyWest)
parzenHAC <- function(x, ...) kernHAC(x, kernel = "Parzen", prewhite = 2,
adjust = FALSE, bw = bwNeweyWest, ...)
coeftest(modelo_lineal, df = Inf, vcov = parzenHAC)
install.packages("strucchange")
library(strucchange)
ocus <- gefp(y ~ 1, fit = lm, vcov = kernHAC)
ocus <- gefp(y ~ 1, fit = lm, vcov = kernHAC)
bp <- breakpoints(y ~1)
confint(bp, vcov= kernHAC)
# Mapa con tmap
library(tidyverse)
library(sf)
library(rmapshaper)
library(tmap)
library(tmaptools)
library(readxl)
# Datos Saber 11 ----
saber <- read_excel("/Users/camilomartinez/OneDrive/Proyectos R/Gif Saber 11/saber2014-19.xlsx")
saber <- saber %>%
mutate(cod_dane = str_pad(cod_dane, 5, side = "left", pad = "0"))
saber2 <- saber %>%
pivot_longer(-c(estu_mcpio_reside, cod_dane), names_to = "año", values_to = "puntaje") %>%
mutate(año = str_remove(año, "puntaje_"))
class(saber2$puntaje)
vmax <- max(saber2$puntaje)
vmax
vmax <- max(saber2$puntaje, na.rm=T)
vmin <- min(saber2$puntaje, na.rm=T)
pais <- sf::st_read("~/OneDrive/Mapas/Nacional/ADMINISTRATIVO/MGN_MPIO_POLITICO.shp")
pais_simple <- rmapshaper::ms_simplify(pais, sys=T, keep = 0.01) %>%
st_as_sf()
pais_simple <- st_transform(pais_simple, 4326)
data <- left_join(pais_simple, saber2, by = c("MPIO_CCDGO" = "cod_dane"))
data_2014 <- filter(data, año == 2014)
tm_shape(data_2014) +
tm_borders()
tm_shape(pais_simple) +
tm_borders()
data <- full_join(pais_simple, saber2, by = c("MPIO_CCDGO" = "cod_dane"))
data_2014 <- filter(data, año == 2014)
tm_shape(data_2014) +
tm_borders()
data <- left_join(pais_simple, saber2, by = c("MPIO_CCDGO" = "cod_dane"))
data_2014 <- filter(data, año == 2014)
tm_shape(data_2014) +
tm_borders()
library(lwgeom)
data_2014_valida <- lwgeom::st_make_valid(pais_simple3)
data_2014_valida <- lwgeom::st_make_valid(data_2014)
library(lwgeom)
data_2014_valida <- lwgeom::st_make_valid(data_2014)
data_2014_valida <- st_make_valid(data_2014)
tm_shape(data_2014_valida) +
tm_borders()
ggplot(data_2014) +
geom_sf()
data <- right_join(pais_simple, saber2, by = c("MPIO_CCDGO" = "cod_dane"))
data_2014 <- filter(data, año == 2014)
data_2014_valida <- st_make_valid(data_2014)
ggplot(data_2014) +
geom_sf()
ggplot(pais_simple) +
geom_sf()
data <- left_join(pais_simple, saber2, by = c("MPIO_CCDGO" = "cod_dane"))
data_2015 <- filter(data, año == 2015)
data_2015_valida <- st_make_valid(data_2015)
ggplot(data_2015) +
geom_sf()
View(data_2014)
View(data)
nrow(data_2014)
nrow(pais_simple)
data_2014[is.na(data_2014$año)]
sf::st_is_empty(data_2014)
vacias <- data[st_is_empty(data)]
View(vacias)
vacias <- data[st_is_empty(data$geometry)]
View(vacias)
data %>% filter(st_is_empty(data))
data %>% filter(st_is_empty())
any(is.na(st_dimension(data)))
is.na(st_dimension(data))
sum(is.na(st_dimension(data)))
ggplot(data_2015) +
geom_sf()
ggplot(pais_simple) +
geom_sf()
View(pais)
View(pais_simple)
data <- left_join(pais_simple, saber2, by = c("MPIO_CCDGO" = "cod_dane"))
data %>% filter(is.na(año))
vacios <- data %>% filter(is.na(año))
View(vacios)
data <- inner_join(pais_simple, saber2, by = c("MPIO_CCDGO" = "cod_dane"))
vacios2 <- anti_join(pais_simple, saber2, by = c("MPIO_CCDGO" = "cod_dane"))
View(vacios2)
vacios <- data %>% filter(is.na(año))
data <- left_join(pais_simple, saber2, by = c("MPIO_CCDGO" = "cod_dane"))
vacios <- data %>% filter(is.na(año))
View(vacios)
data_2015 <- filter(data, año == 2015 | año == NA)
data_2015 <- filter(data, año == 2015 | is.na(año))
data_2015_valida <- st_make_valid(data_2015)
tm_shape(data_2015_valida) +
tm_borders()
tm_shape(data_2015_valida) +
tm_borders() +
tm_fill("puntaje")
ggplot(pais_simple) +
geom_sf(aes(fill=puntaje))
ggplot(pais_simple) +
geom_sf(aes(fill="puntaje"))
data <- left_join(pais_simple, saber, by = c("MPIO_CCDGO" = "cod_dane"))
View(data)
data <- left_join(pais_simple, saber, by = c("MPIO_CCDGO" = "cod_dane")) %>%
pivot_longer(c(puntaje_2014, puntaje_2015, puntaje_2016, puntaje_2017, puntaje_2018, puntaje_2019), names_to = "año", values_to = "puntaje") %>%
mutate(año = str_remove(año, "puntaje_"))
View(data)
View(vacios2)
tm_shape(data) +
tm_borders() +
tm_fill("puntaje")
tm_shape(data) +
tm_borders() +
tm_fill(puntaje)
tm_shape(data) +
tm_borders()
ggplot(pais_simple) +
geom_sf(aes(fill="puntaje")) +
scale_fill_viridis_c(name = "Puntaje", begin = 0, end = 1, limits = c(vmin, vmax))
ggplot(pais_simple) +
geom_sf(aes(fill="puntaje"))
ggplot(pais_simple, aes(fill = puntaje)) +
geom_sf() +
scale_fill_viridis_c(name = "Puntaje", begin = 0, end = 1, limits = c(vmin, vmax))
ggplot(data, aes(fill = puntaje)) +
geom_sf()
ggplot(data) +
geom_sf(aes(fill = puntaje))
ggplot(data) +
geom_sf()
class(data)
data <- left_join(pais_simple, saber, by = c("MPIO_CCDGO" = "cod_dane"))
class(data)
data <- left_join(pais_simple, saber, by = c("MPIO_CCDGO" = "cod_dane")) %>%
pivot_longer(c(puntaje_2014, puntaje_2015, puntaje_2016, puntaje_2017, puntaje_2018, puntaje_2019), names_to = "año", values_to = "puntaje")
class(data)
data <- left_join(pais_simple, saber, by = c("MPIO_CCDGO" = "cod_dane"))
data <- left_join(pais_simple, saber, by = c("MPIO_CCDGO" = "cod_dane")) %>%
gather(c(puntaje_2014, puntaje_2015, puntaje_2016, puntaje_2017, puntaje_2018, puntaje_2019), key = "año", value = "puntaje") %>%
mutate(año = str_remove(año, "puntaje_"))
class(data)
ggplot(data) +
geom_sf()
tm_shape(data) +
tm_borders(lwd = 0.5)
data <. lwgeom::lwgeom_make_valid(data)
data <- lwgeom::lwgeom_make_valid(data)
data <- lwgeom::st_make_valid(data)
data <- st_make_valid(data)
tm_shape(datavalida) +
tm_borders() +
tm_shape(datavalida) +
tm_borders() +
tm_fill("puntaje") +
tm_facets("año")
tm_shape(data) +
tm_borders() +
tm_fill("puntaje") +
tm_facets("año")
mapa_2 <- tm_shape(data) +
tm_borders() +
tm_fill("puntaje") +
tm_facets("año")
tmap_animation(mapa_2, "test.gif", width = 800, delay = 200)
tmap_animation(mapa_2, filename = "test.gif", width = 800, delay = 200)
ggplot(pais_simple) +
geom_sf(aes(fill="puntaje")) +
scale_fill_viridis(name = "Puntaje", begin = 0, end = 1, limits = c(vmin, vmax))
ggplot(pais_simple) +
geom_sf(aes(fill="puntaje")) +
scale_fill_viridis_c(name = "Puntaje", begin = 0, end = 1, limits = c(vmin, vmax))
ggplot(pais_simple) +
geom_sf(aes(fill="puntaje")) +
scale_fill_viridis_c(name = "Puntaje", begin = vmin, end = vmax)
ggplot(pais_simple) +
geom_sf(aes(fill="puntaje")) +
scale_fill_viridis_c(name = "Puntaje", begin = 0, end = 1, values = c(vmin, vmax))
ggplot(pais_simple) +
geom_sf(aes(fill="puntaje")) +
scale_fill_viridis_c(name = "Puntaje", begin = 0, end = 1, values = puntaje)
ggplot(pais_simple) +
geom_sf(aes(fill="puntaje")) +
scale_fill_viridis_c(name = "Puntaje", begin = 0, end = 1, values = "puntaje")
ggplot(data) +
geom_sf(aes(fill=puntaje)) +
scale_fill_viridis_c(name = "Puntaje", begin = 0, end = 1)
tmap_mode("view")
tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje") +
tm_facets("año")
tmap_mode("view")
tm_shape(data) +
tm_polygons("puntaje")
tmap_mode("plot")
tmap_animation(map2)
map2 <- tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje") +
tm_facets("año")
tmap_animation(map2, "test.gif", width = 800, delay = 400)
map2 <- tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje") +
tm_facets(along = "año")
tmap_animation(map2, "test.gif", width = 800, delay = 400)
tmap_animation(map2, "test.gif", width = 600, height = 800, delay = 400)
tmap_mode("view")
tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje") +
tm_facets(along = "año")
tmap_mode("plot")
tmap_animation(map2, "test.gif", width = 600, height = 800, delay = 100)
tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje") +
tm_facets(along = "año") +
tm_layout(title.snap.to.legend = T)
map2 <- tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje", title = "Puntaje Saber 11", palette = "viridis") +
tm_facets(along = "año") +
tm_layout(legend.position = c("left", "bottom"), legend.text.size = 0.3)
tmap_animation(map2, "test.gif", width = 600, height = 800, delay = 100)
map2 <- tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje", title = "Puntaje Saber 11") +
tm_facets(along = "año") +
tm_layout(legend.position = c("left", "bottom"), legend.text.size = 0.3, legend.title.size = 0.3)
tmap_animation(map2, "test.gif", width = 600, height = 800, delay = 100)
map2 <- tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje", title = "Puntaje Saber 11") +
tm_facets(along = "año") +
tm_layout(legend.position = c("left", "bottom"), legend.text.size = 0.3, legend.title.size = 0.3)
tmap_animation(map2, "test.gif", width = 1000, height = 1200, delay = 100)
# Mapa con tmap
map2 <- tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje", title = "Puntaje Saber 11") +
tm_facets(along = "año") +
tm_layout(legend.position = c("left", "bottom"), legend.text.size = 0.3,
legend.title.size = 0.3, title.position = c("center", "top"))
map2 <- tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje", title = "Puntaje Saber 11") +
tm_facets(along = "año") +
tm_layout(legend.position = c("left", "bottom"), legend.text.size = 0.3,
legend.title.size = 0.3, title.position = c("center", "top"),
title.size = 0.5)
map2 <- tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje", title = "Puntaje Saber 11") +
tm_facets(along = "año") +
tm_layout(legend.position = c("left", "bottom"), legend.text.size = 0.3,
legend.title.size = 0.3, title.position = c("center", "top"),
title.size = 0.5)
tmap_animation(map2, "test.gif", width = 2000, height = 3000, delay = 100)
map2 <- tm_shape(data) +
tm_borders(lwd = 0.2) +
tm_fill("puntaje", title = "Puntaje Saber 11") +
tm_facets(along = "año") +
tm_layout(legend.position = c("left", "bottom"), legend.text.size = 0.3,
legend.title.size = 0.3)
tmap_animation(map2, "test.gif", width = 1000, height = 1200, delay = 100)
View(vacios)
rm(list=ls())
my_kalman <- function(Yt, Zt, dt, Ht, Tt, ct, Rt, Qt, at_1, Pt_1) {
# Ecuacion 1
at_given_at_1 <- Tt%*%at_1 + ct
# Ecuacion 2
Pt_given_Pt_1 <- Tt%*%Pt_1%*%t(Tt) + Rt%*%Qt%*%t(Rt)
# Ecuacion F
Ft <- Zt%*%Pt_given_Pt_1%*%t(Zt) + Ht
# Ecuacion 3
at <- at_given_at_1 + Pt_given_Pt_1%*%t(Zt)%*%solve(Ft)%*%(Yt -Zt%*%at_given_at_1 - dt)
# Ecuacion 4
Pt <- Pt_given_Pt_1 - Pt_given_Pt_1%*%t(Zt)%*%solve(Ft)%*%Pt_given_Pt_1
# Output
return(list(at, Pt))
}
t <- 50
i <- 2
at <- list()
while (i<50) {
test[i] <- i
i <- i+1
}
while (i<50) {
at[i] <- i
i <- i+1
}
View(at)
at <- list()
at[1]<- 8
while (i<50) {
at[i] <- i
i <- i+1
}
View(at)
while (i<50) {
at[i] <- i
i <- i+1
}
View(at)
i <- 2
i <- 2
at <- list()
at[1]<-8
while (i<50) {
at[i] <- i
i <- i+1
}
View(at)
mtcars
summary(mtcars)
str(mtcars)
class(mtcars$wt)
cor(mtcars$cyl, mtcars$hp)
library(readr)
data <- read_csv("/Users/camilomartinez/Downloads/orangeec.csv")
cor(data$`GDP Growth %`, data$`Creat Ind % GDP`)
cor(data$`GDP Growth %`, data$`Creat Ind % GDP`)
str(data)
cor(data$`GDP Growth %`, data$`Creat Ind % GDP`, na.rm = TRUE)
cor(data$`GDP Growth %`, data$`Creat Ind % GDP`, use = "complete")
max(data$`GDP PC`)
hist(mtcars$cyl
)
hist(mtcars$cyl, width = 1)
library(ggplot2)
ggplot(mtcars, aes(cyl)) + geom_histogram(binwidth = 1)
ggplot(mtcars, aes(x =hp, y =qsec)) + geom_point()
ggplot(data, aes(`Creat Ind % GDP`)) + geom_histogram(binwidth = 1)
ggplot(data, aes(`Creat Ind % GDP`,y = `GDP Growth %` )) + geom_point()
rm(list=ls())
download.file("https://www.datos.gov.co/Salud-y-Protecci-n-Social/Casos-positivos-de-COVID-19-en-Colombia/gt2j-8ykr/data",
"data.xlsx")
download.file("https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD&bom=true&format=true",
"data.xlsx")
download.file("https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD&bom=true&format=true",
"data.csv")
update.packages()
Yes
rm(list=ls())
setwd("~/Documents/GIthub/covid-dashboard-replica-colombia")
list_of_packages <- c("tidyverse", "lubridate", "sf", "leaflet", "shiny",
"shinydashboard", "naniar")
list_of_packages <- c("tidyverse", "lubridate", "sf", "leaflet", "shiny",
"shinydashboard", "naniar")
for (i in list_of_packages) {
if(!require(i, character.only = T)) {install.packages(i)}
library(i, character.only = T)
}
# Downloading data from INS
download.file("https://www.datos.gov.co/api/views/gt2j-8ykr/rows.csv?accessType=DOWNLOAD&bom=true&format=true",
"data/data.csv")
runApp('app')
data <- read_csv("../data/data.csv") %>%
replace_with_na(replace = list('Fecha de muerte'= "-", atención = "N/A")) %>%
mutate(rango_edad = case_when(between(Edad, 0, 9) ~ "0-9",
between(Edad, 10, 19) ~ "10-19",
between(Edad, 20, 29) ~ "20-29",
between(Edad, 30, 39) ~ "30-39",
between(Edad, 40, 49) ~ "40-49",
between(Edad, 50, 59) ~ "50-59",
between(Edad, 60, 69) ~ "60-69",
between(Edad, 70, 79) ~ "70-79",
between(Edad, 80, 89) ~ "80-89",
Edad >= 90 ~ "90 o >"
)) %>%
mutate(Sexo_corregido = case_when(Sexo %in% c("M", "m") ~ "Masculino",
Sexo %in% c("F", "f") ~ "Femenino"))
data <- read_csv("/data/data.csv") %>%
replace_with_na(replace = list('Fecha de muerte'= "-", atención = "N/A")) %>%
mutate(rango_edad = case_when(between(Edad, 0, 9) ~ "0-9",
between(Edad, 10, 19) ~ "10-19",
between(Edad, 20, 29) ~ "20-29",
between(Edad, 30, 39) ~ "30-39",
between(Edad, 40, 49) ~ "40-49",
between(Edad, 50, 59) ~ "50-59",
between(Edad, 60, 69) ~ "60-69",
between(Edad, 70, 79) ~ "70-79",
between(Edad, 80, 89) ~ "80-89",
Edad >= 90 ~ "90 o >"
)) %>%
mutate(Sexo_corregido = case_when(Sexo %in% c("M", "m") ~ "Masculino",
Sexo %in% c("F", "f") ~ "Femenino"))
data <- read_csv("data/data.csv") %>%
replace_with_na(replace = list('Fecha de muerte'= "-", atención = "N/A")) %>%
mutate(rango_edad = case_when(between(Edad, 0, 9) ~ "0-9",
between(Edad, 10, 19) ~ "10-19",
between(Edad, 20, 29) ~ "20-29",
between(Edad, 30, 39) ~ "30-39",
between(Edad, 40, 49) ~ "40-49",
between(Edad, 50, 59) ~ "50-59",
between(Edad, 60, 69) ~ "60-69",
between(Edad, 70, 79) ~ "70-79",
between(Edad, 80, 89) ~ "80-89",
Edad >= 90 ~ "90 o >"
)) %>%
mutate(Sexo_corregido = case_when(Sexo %in% c("M", "m") ~ "Masculino",
Sexo %in% c("F", "f") ~ "Femenino"))
max(data$`Fecha diagnostico`)
class(data$`Fecha diagnostico`)
(data$`Fecha diagnostico`[1])
lubridate::year(data$`Fecha diagnostico`[1])
min(data$`Fecha de notificación`)
max(data$`Fecha de notificación`)
max(data$`Fecha diagnostico`)
naniar::gg_miss_case(data)
naniar::gg_miss_var(data)
naniar::vis_miss(data)
max(data$`Fecha de notificación`, na.rm = T)
day(max(data$`Fecha de notificación`, na.rm = T))
day(max(data$`Fecha diagnostico`, na.rm = T))
max(data$`Fecha diagnostico`, na.rm = T)
?parse_date_time
lubridate::fast_strptime(max(data$`Fecha diagnostico`, na.rm = T), format = "D - M - Y")
lubridate::format(max(data$`Fecha diagnostico`, na.rm = T), format = "%d/$B/%Y")
format(max(data$`Fecha diagnostico`, na.rm = T), format = "%d/$B/%Y")
format(max(data$`Fecha diagnostico`, na.rm = T), format = "%d/%B/%Y")
format(max(data$`Fecha diagnostico`, na.rm = T), format = "%d/%Bb/%Y")
format(max(data$`Fecha diagnostico`, na.rm = T), format = "%d/%b/%Y")
format(max(data$`Fecha diagnostico`, na.rm = T), format = "%d/%M/%Y")
format(max(data$`Fecha diagnostico`, na.rm = T), format = "%d/%b/%Y")
format(max(data$`Fecha diagnostico`, na.rm = T), format = "%d/%m/%Y")
runApp('app')
runApp('app')
runApp('app')
